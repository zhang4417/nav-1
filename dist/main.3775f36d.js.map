{"version":3,"sources":["main.js"],"names":["console","log","$","$lastLi","find","$addSite","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","item","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem"],"mappings":"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","file":"main.3775f36d.js","sourceRoot":"..\\src","sourcesContent":["console.log($)\r\nconst $lastLi = $('.siteList').find('li.last')\r\nconst $addSite = $('.addSite')\r\nconst x = localStorage.getItem('x')//提取数据\r\nconst xObject = JSON.parse(x)\r\nconst hashMap = xObject || [\r\n    { logo: \"I\", url: \"https://www.iconfont.cn\" },\r\n    { logo: \"F\", url: \"https://figma.com\" },\r\n]\r\nconst simplifyUrl = url => {//简化URL\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')//使用正则表达找到\"/\"及\"/\"之后的内容\r\n}\r\nconst render = () => {\r\n    $('.siteList').find('li:not(.last)').remove()\r\n    hashMap.forEach((item, index) => {\r\n        const $li = $(`<li>\r\n                <div class=\"site\">\r\n                    <div class=\"logo\">${item.logo}</div>\r\n                    <div class=\"link\">${simplifyUrl(item.url)}</div>\r\n                    <div class=\"close\">\r\n                        <svg class=\"icon\" >\r\n                            <use xlink:href=\"#icon-close\"></use>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n        </li >`).insertBefore($lastLi)//遍历哈希表，添加网址到lastLi之前\r\n        $li.on('click', () => { window.open(item.url) })\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation()//阻止冒泡\r\n            hashMap.splice(index, 1)\r\n            render()//重新渲染哈希表\r\n        })\r\n    })\r\n}\r\nrender()\r\n\r\n$addSite.on('click', () => {\r\n    let url = window.prompt('请输入要添加的网址！')//添加提示窗口\r\n    if (url.indexOf('http') !== 0) {\r\n        url = \"https://\" + url\r\n    }\r\n    hashMap.push({ logo: simplifyUrl(url)[0].toUpperCase(), url: url })\r\n    render()\r\n})\r\n\r\nconsole.log(hashMap)\r\n\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)\r\n    window.localStorage.setItem('x', string)//存储数据\r\n}\r\n"]}